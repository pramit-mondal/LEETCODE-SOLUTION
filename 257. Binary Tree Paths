/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */
class Solution {
public:
    vector<string> binaryTreePaths(TreeNode* root) {
        vector<string> path ;
        if(root == NULL) return path;
        dfs(root,"",path);
        return path;
    }
    void dfs(TreeNode* root,string paths,vector<string>&path)
    {
        if(!root) return;
        if(!root->left  && !root->right) {
            paths += to_string(root->val);
            path.push_back(paths);
            return;
        }
     
            dfs(root->left,paths + to_string(root->val) + "->",path);

            dfs(root->right,paths + to_string(root->val) + "->",path);
        
    }
};
